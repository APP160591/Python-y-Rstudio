#objetos en r
b<-5
10*b
sqrt(b)
#vectores
w<-1:6
w
seq(1,6,0.5)
x<-c("a","a","a","b","b","b")
x
xx<-c(a,a,a,b,b,b)
ww<->4
w<-c(1,2,3,4,5,6)
xx < - (a,a,a,b,b,b)
a <- 2.25
b <- 3.6
xx
a <- 2.25
a <- 2.25
xx <- c(a,a,a,b,b,b)
xx
ww <- w>4
ww
w[ww]
#matrices
y <- matrix (1:20, ncol = 4)
y
#matriz ordenada byrow
matrix(1:20, byrow = TRUE, ncol = 4)
#nombre a matiz
y <- matrix (1:20, byrow = TRUE, ncol=4, dimnames = list(paste("r", 1:5, sep = ""), paste("c", 1:4, sep = ".")))
y
#ejercicio
paste("c", 1:4, sep = ".")
data frame
#data frame
z <- data.frame(x, w)
z
#listas
Z <- list(V.w = 2*w, V.x = x M.y = log(y))
Z <- list(V.w = 2*w, V.x = x, M.y = log(y))
Z
save.image("C:\\Users\\Alejandro\\OneDrive\\Escritorio\\ejercicios_r\\objetos_r")
q()
#indexar objetos
x[1:3]
y[3:5, 3:4]
#ejercicio
y[,2]
#acceder a las columnas
z$x
Levels: a b
Levels: "a" "b"
Levels:ab
levels: a b
Levels: a b
z$w
Z$M.y
#extraer tecer y cuarto renglon de la segunda columna
Z$M.y[3:4, 2]
#MANERA ALTERNATIVA
Z[[3]][3:4, 2]
#ATRIBUTOS DE LOS OBJETOS
class(w), clss(x), class(ww), class(y), class(z), class(Z)
class(w), class(x), class(ww), class(y), class(z), class(Z)
class(w); class(x); class(ww); class(y); class(z); class(Z)
attributes(w); str(w)
attributes(Z); str(Z)
#USANDO LOS OBJETOS
sqrt(w)
sqrt(y)
sqrt(z$w)
A <- matrix (c(1,2,3,4,5), ncol=2)
A <- matrix (c(1,2,3,4,), ncol = 2)
A <- matrix (c(1,2,3,4), ncol = 2)
b<- c(2,3)
A*b
A%%b
t(A)
solve(A)
#BORRANDO OBJETOS
ls()
rm(y)
rm(list = ls())
.invisible <- rnom(20)
.invisible <- rnorm(20)
ls()
ls(all = TRUE)
rm(list=ls())
ls(all = TRUE)
rm(list=ls(all=TRUE))
ls(all = TRUE)
save.image("C:\\Users\\Alejandro\\OneDrive\\Escritorio\\ejercicios_r\\indexar_objetos")
q()
z <- data.frame(grupo = sort(sep(c("a","b"),8)),var1= rnorm(16))
z <- data.frame(grupo = sort(rep(c("a","b"),8)),var1= rnorm(16))
z
plot (z$var1)
hist (z$var1)
boxplot(var1~ grupo, data = z, main "bloxplot de prueba", xlab= "grupo", ylab = "variable 1")
boxplot(var1 ~ grupo, data = z, main= "bloxplot de prueba", xlab= "grupo", ylab = "variable 1")
z$var2 <- (z$var1)^2
z <- z[order(z$var1),]
par(mfrow=c(2,2))
plot(z$var1, z$var3, type= "p", main="solo puntos")
plot(z$var1, z$var3, type= "l", main="solo lineas")
plot(z$var1, z$var3, type= "b", main="puntos y lineas")
plot(z$var1, z$var3, type= "o", main="puntos y lineas\n sobrepuestos")
save.image("C:\\Users\\Alejandro\\OneDrive\\Escritorio\\ejercicios_r\\graficas_simples")
q()
?ls
help("rnorm")
help(par)
help.search("linear sodels")
#EJERCICIO
help("hist")
save.image("C:\\Users\\Alejandro\\OneDrive\\Escritorio\\ejercicios_r\\ayuda_funciones_paquetes")
q()
> x <- read.delim("clipboard")
x <- read.delim("clipboard")
#MEDIANTE RED.TABLE()
x <- read.table("ruta/archivo", header, sep)
setwd('G:/analisis')
a00 <- read.table("./datos/archivo_00.txt", header = TRUE, sep = "\t")
#CON PAQUETE READXL
> library(readxl)
library(readxl)
atos <- read_excel("./datos/archivo_04.xls", sheet = 1)
datos <- read_excel("./datos/archivo_04.xls", sheet = 1)
library(RODBC)
con <- odbcConnectExcel("./datos/archivo_04.xls")
sqlTables(con)
a04pA <- sqlFetch(con, "A_1962")
closeAllConnections()
detach("package:RODBC")
save.image("C:\\Users\\Alejandro\\OneDrive\\Escritorio\\ejercicios_r\\importar_datos")
q()
cibmeteo <- read.table("cibmeteo.txt", header=TRUE, sep="\t")
dim(cibmeteo)
names(cibmeteo)
summary(cibmeteo)
plot(cibmeteo$temperature, type="l", col = "grey")
attach(cibmeteo)
fecha <- paste(year, month, day, sep = "-")
fecha <- strptime(fecha, "%Y-%m-%d")
fecha_txt <- as.character(fecha)
taire <- as.data.frame(
+    cbind(tapply(temperature, list(fecha_txt), min),
+          tapply(temperature, list(fecha_txt), max),
+          tapply(temperature, list(fecha_txt), mean)))
detach(cibmeteo)
colnames(taire) <- c('tmin', 'tmax', 'tavg')
attach(cibmeteo)
tapply(temperature, list(month, year), mean)
aggregate(temperature, by=list(mes=month, año=year), mean)
Z <- c(4, 8, 9, 7, 8, 9, 4, 5)
Z.pmov <- c(7, 8, 8, 8, 7, 6)
Z.pmov <- c(NA, Z.pmov, NA)
Z.pmov
pmov <- function(x, k) {
n <- length(x)
y <- rep(NA, n)
for (i in k:n)
y[i-floor(k/2)] <- mean( x[(1+i-k):i] )
y
}
tmean.pmov <- pmov(taire$tavg, 15)
plot(taire$tavg, type = "o",ylab = "temperatura (°C)",xlab="día",
main = "Temp. diaria promedio en La Paz \n (junio 2006 a mayo 2007)",
lty = 3, col="grey50", lwd = 1)
lines(tmean.pmov, lwd = 2, col = "blue")
anomalia <- tmean.pmov - mean(tmean.pmov, na.rm=TRUE)
anomalia[is.na(anomalia)] <- 0
dias <- unique(cibmeteo[, 1:3])
ndmes <- aggregate(dias$day, by = list(dias$month, dias$year), length)
ndmes
plot(anomalia, type="n", ylab = "anomalía de temperatura", xlab = "",
+ xaxt = "n" )
polygon(c(1:364, 364:1), c(anomalia, rep(0, 364)), col="green")
abline(h=0, v=c(0, cumsum(ndmes$x)), col="black", lty=3)
axis(1, at=cumsum(ndmes$x)-ndmes$x/2, labels = c("jun","jul","ago",
+ "sep","oct","nov","dic","ene","feb","mar","abr","may"))
write.table(taire, file = "temp_aire.txt", quote = FALSE, sep = "\t",
dec = ".", row.names = TRUE, col.names = TRUE)
savePlot(filename="Figura_1.png", type="png")
write.table(taire, file = "taire_datos", quote = FALSE, sep = ";",
dec = ".", row.names = TRUE, col.names = TRUE)
x <- 1:100
y <- 2.5*x + 31 + (rnorm(100) * 9)
plot(x, y)
xy.lm <- lm(y ~ x)
summary(xy.lm)
attributes(xy.lm)
coef(xy.lm)
abline(xy.lm)
par(mfrow=c(2,2))
plot(xy.lm)
X <- seq(1, 20, length=100)
Y <- 2.5 *( X+runif(100)*3 )^2.5
modelo.potencial <- nls(Y ~ a * X^b, start = list(a=1, b=1), trace=TRUE,
+ algorithm="default", model = TRUE)
plot(X, Y)
modelo.potencial <- nls(Y ~ a * X^b, start = list(a=1, b=1), trace=TRUE,
+ algorithm="default", model = TRUE)
coef(modelo.potencial)
summary(modelo.potencial)
lines(X, predict(modelo.potencial), col="red", lwd=2)
exaov <- read.table("exaov.txt" ,header=TRUE, sep=";")
dim(exaov)
insul.anova <- aov(insulina ~ as.factor(estimulante), data=exaov)
insul.anova
save.image("C:\\Users\\Alejandro\\OneDrive\\Escritorio\\ejercicios_r\\datos_reales")
q()
#OPERACIONES BASICAS
3+6 #SUMA
8*9 #MULTIPLICACION
10-8 #RESTA
5/2 #COCIENTE
4^2 #POTENCIA
#REGALAS DE PROCEDENCIA NORMALES
5+3*2
#LOS PARENTESIS GARANTIZAN QUE LA SUMA VA PRIMERO
(5+2)*3
#LOGARITMOS
log(100,10)
log10(100)#logaritmo base 10
#EXPONENCIALES
exp(2)
sqrt(16)
#EJERCICIO
sin(90*pi/180)
cos(90*pi/180)
